=================================================

PS Vertiefung Betriebssysteme Winter 2008/09

ASSIGNMENT 2 

Team: Gratz, Kasinger 

=================================================


What we have implemented:
-------------------------

	* All requests of Assignment 2
	


How we have implemented this:
-----------------------------

As demanded in the project description we have implemented 2 devices.
Our intention in designing the interfaces was to create a message management device only, 
with no more logical behavior.
This means the message management device is responsible for:
	* allocating resources needed for the messages and slots
	* list handling of messages and slots
	* freeing memory of messages and according slots. 
	
Our device driver is responsible for:
	* concurrency behavior for multiple processes
	* Logical behavior (flow control)
	* completion mechanism on message level
	




What you find here is:
----------------------

+ mbcdd.c: the actual device driver featuring all necessary methods to enable inserting and removing the module and providing read/write-access to the "in-memory"-device.

+ mbcdd.h: header-file for mbcd.c defining the used structures.

+ mbcdd_msg_hdl.c: implements the message management.

+ mbcdd_msg_hdl.h: defines the message management interface.  

+ producer.c: the producer-userland-application. Sends messages to the device.

+ consumer.c: the consumer-userland-application. Reads messages from the device.

+ file.c, file.h: provides functionality for dealing with files.

+ mytypes.h: "features" a str(ing) type.

+ Makefile: features "make", "make producer", "make consumer".

+ mbcd_load.sh: inserts the module and creates the device /dev/mbcd.



HOW TO BUILD:
-------------

Run "make" to build everything. Run "make producer" or "make consumer" for only building the specific userland applications.



HOW TO RUN:
-----------

After building the binaries by using "make" run "mbcd_load.sh" as root to insert the module mbcd.ko and create the device /dev/mbcd.

Now run (again as root) the "producer p", with p specifying the period in ms for writes  to the device.

Run (as root) "consumer p", with p specifying the period in ms for reading from the device.

If arguement p is omitted a default of 100ms is being used.


--
Have a nice day! 





